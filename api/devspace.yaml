version: v2beta1
name: api

# This is a list of `images` that DevSpace can build for this project
# We recommend to skip image building during development (devspace dev) as much as possible
images:
  api:
    image: kmadel/api
    dockerfile: ./Dockerfile

pipelines:
  # Override the default pipeline for 'devspace dev'
  dev: |-
    run_dependencies --all
    ensure_pull_secrets --all
    build_images --all
    create_deployments --all --except api-staging
    start_dev api

  deploy: |-
    run_dependencies --all
    ensure_pull_secrets --all
    build_images --all
    create_deployments api \
      --set=namespace=staging
    kubectl delete service api -n api --ignore-not-found
    create_deployments api-staging

# This is a list of `deployments` that DevSpace can create for this project
deployments:
  api-staging:
    namespace: api
    kubectl:
      manifests:
        - external-service.yaml
  api:
    namespace: api
    # This deployment uses `helm` but you can also define `kubectl` deployments or kustomizations
    helm:
      # We are deploying this project with the Helm chart you provided
      chart:
        name: component-chart
        repo: https://charts.devspace.sh
      # Under `values` we can define the values for this Helm chart used during `helm install/upgrade`
      # You may also use `valuesFiles` to load values from files, e.g. valuesFiles: ["values.yaml"]
      values:
        containers:
          - image: kmadel/api:latest
            args:
              - --text=echo v1 local
            env:
              # secret for connecting to Kafka provide by Loft synced secret - possibly with Vault integration
              - name: KAFKA_CHANNEL
                value: dev-${LOFT_USERNAME}
              
        service:
          ports:
            - name: http
              port: 80
              containerPort: 8080

# This is a list of `dev` containers that are based on the containers created by your deployments
dev:
  api:
    name: api
    namespace: api
    # Search for the container that runs this image
    imageSelector: kmadel/api
    # Replace the container image with this dev-optimized image (allows to skip image building during development)
    devImage: ghcr.io/loft-sh/devspace-containers/go:1.21-alpine
    # Sync files between the local filesystem and the development container
    command:
      - go
      - run
      - main.go
    sync:
      - path: ./
        excludePaths:
          - '**'
          - '!**/*.go'
          - '!go.mod'
          - '!go.sum'
        onUpload:
          restartContainer: true
    logs: {}
    # Open a terminal and use the following command to start it
#    terminal:
#      command: ./devspace_start.sh
    # Inject a lightweight SSH server into the container (so your IDE can connect to the remote dev env)
    ssh:
      enabled: true
    # Make the following commands from my local machine available inside the dev container
    proxyCommands:
      - command: devspace
      - command: kubectl
      - command: helm
      - gitCredentials: true
    # Forward the following ports to be able access your application via localhost
    ports:
      - port: "2345"
      - port: "8081:8080"
    # Open the following URLs once they return an HTTP status code other than 502 or 503
    open:
      - url: http://localhost:8081

